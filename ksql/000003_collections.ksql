-- create types
CREATE TYPE COLLECTION
  AS STRUCT<
    "id" STRING,
    "name" STRING,
    "cover" STRING,
    "owner_id" STRING
  >;

-- create events
CREATE STREAM "event_collection_add" (
    "standard" STRING,
    "version" STRING,
    "event" STRING,
    "data" COLLECTION,
    "emit_info" EMIT_INFO
)
WITH (
    kafka_topic = '${topic_input_prefix}.sigilnet.collection_add',
    value_format = 'json',
    partitions = ${topic_input_partitions}
);

CREATE STREAM "event_collection_update" (
    "standard" STRING,
    "version" STRING,
    "event" STRING,
    "data" COLLECTION,
    "emit_info" EMIT_INFO
)
WITH (
    kafka_topic = '${topic_input_prefix}.sigilnet.collection_update',
    value_format = 'json',
    partitions = ${topic_input_partitions}
);

-- create collections
CREATE STREAM "collection_add"
  WITH (kafka_topic='${topic_output_prefix}.sigilnet.collection_add', partitions=${topic_output_partitions}, value_format='json')
  AS SELECT
    "emit_info"->"contract_account_id" + ':' + "data"->"id" AS "_id",
    AS_VALUE("data"->"id") AS "id",
    "data"->"id" AS "partition_key",
    "data"->"name" AS "name",
    "data"->"cover" AS "cover",
    "data"->"owner_id" AS "owner_id",
    "emit_info"->"contract_account_id" AS "contract_account_id"
  FROM
    "event_collection_add"
  PARTITION BY "data"->"id";

CREATE STREAM "collection_update"
  WITH (kafka_topic='${topic_output_prefix}.sigilnet.collection_update', partitions=${topic_output_partitions}, value_format='json')
  AS SELECT
    "emit_info"->"contract_account_id" + ':' + "data"->"id" AS "_id",
    AS_VALUE("data"->"id") AS "id",
    "data"->"id" AS "partition_key",
    "data"->"name" AS "name",
    "data"->"cover" AS "cover",
    "data"->"owner_id" AS "owner_id",
    "emit_info"->"contract_account_id" AS "contract_account_id"
  FROM
    "event_collection_update"
  PARTITION BY "data"->"id";

CREATE STREAM "collections" ("partition_key" STRING KEY, "_id" STRING, "id" STRING, "name" STRING, "cover" STRING, "owner_id" STRING, "contract_account_id" STRING)
  WITH (kafka_topic='${topic_output_prefix}.sigilnet.collections', partitions=${topic_output_partitions}, value_format='avro');

INSERT INTO "collections" SELECT * FROM "collection_add";
INSERT INTO "collections" SELECT * FROM "collection_update";
