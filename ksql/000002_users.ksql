-- create types
CREATE TYPE USER
  AS STRUCT<
    "id" STRING,
    "name" STRING,
    "avatar" STRING,
    "created_at" BIGINT,
    "updated_at" BIGINT
  >;

-- create events
CREATE STREAM "event_user_add" (
    "standard" STRING,
    "version" STRING,
    "event" STRING,
    "data" USER,
    "emit_info" EMIT_INFO
)
WITH (
    kafka_topic = '${topic_input_prefix}.sigilnet.user_add',
    value_format = 'json',
    partitions = ${topic_input_partitions}
);

CREATE STREAM "event_user_update" (
    "standard" STRING,
    "version" STRING,
    "event" STRING,
    "data" USER,
    "emit_info" EMIT_INFO
)
WITH (
    kafka_topic = '${topic_input_prefix}.sigilnet.user_update',
    value_format = 'json',
    partitions = ${topic_input_partitions}
);

-- create users
CREATE STREAM "user_add"
  WITH (kafka_topic='${topic_output_prefix}.sigilnet.user_add', partitions=${topic_output_partitions}, value_format='json')
  AS SELECT
    "emit_info"->"contract_account_id" + ':' + "data"->"id" AS "_id",
    AS_VALUE("data"->"id") AS "id",
    "data"->"id" AS "partition_key",
    "data"->"name" AS "name",
    "data"->"avatar" AS "avatar",
    "data"->"created_at" AS "created_at",
    "data"->"updated_at" AS "updated_at",
    "emit_info"->"contract_account_id" AS "contract_account_id"
  FROM
    "event_user_add"
  PARTITION BY "data"->"id";

CREATE STREAM "user_update"
  WITH (kafka_topic='${topic_output_prefix}.sigilnet.user_update', partitions=${topic_output_partitions}, value_format='json')
  AS SELECT
    "emit_info"->"contract_account_id" + ':' + "data"->"id" AS "_id",
    AS_VALUE("data"->"id") AS "id",
    "data"->"id" AS "partition_key",
    "data"->"name" AS "name",
    "data"->"avatar" AS "avatar",
    "data"->"created_at" AS "created_at",
    "data"->"updated_at" AS "updated_at",
    "emit_info"->"contract_account_id" AS "contract_account_id"
  FROM
    "event_user_update"
  PARTITION BY "data"->"id";

CREATE STREAM "users" ("partition_key" STRING KEY, "_id" STRING, "id" STRING, "name" STRING, "avatar" STRING, "created_at" BIGINT, "updated_at" BIGINT, "contract_account_id" STRING)
  WITH (kafka_topic='${topic_output_prefix}.sigilnet.users', partitions=${topic_output_partitions}, value_format='avro');

INSERT INTO "users" SELECT * FROM "user_add";
INSERT INTO "users" SELECT * FROM "user_update";
