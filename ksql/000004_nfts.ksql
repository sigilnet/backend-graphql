-- create types
CREATE TYPE TOKEN_METADATA
  AS STRUCT<
    "title" STRING,
    "description" STRING,
    "media" STRING,
    "media_hash" STRING,
    "copies" INT,
    "issued_at" STRING,
    "expires_at" STRING,
    "starts_at" STRING,
    "updated_at" STRING,
    "extra" STRING,
    "reference" STRING,
    "reference_hash" STRING,
    "collection_id" STRING
  >;

CREATE TYPE NFT_MINT
  AS STRUCT<
    "owner_id" STRING,
    "token_ids" ARRAY<STRING>,
    "memo" STRING
  >;

CREATE TYPE NFT_TRANSFER
  AS STRUCT<
    "new_owner_id" STRING,
    "old_owner_id" STRING,
    "token_ids" ARRAY<STRING>,
    "memo" STRING
  >;

-- create events
CREATE STREAM "event_nft_mint" (
    "standard" STRING,
    "version" STRING,
    "event" STRING,
    "emit_info" EMIT_INFO,
    "data" ARRAY <NFT_MINT>
)
WITH (
    kafka_topic = '${topic_input_prefix}.nep171.nft_mint',
    value_format = 'json',
    partitions = ${topic_input_partitions}
);

CREATE STREAM "event_nft_mint_flat"
  WITH (kafka_topic='${topic_input_prefix}.nep171.nft_mint_flat', partitions=${topic_input_partitions}, value_format='json')
  AS SELECT
    EXPLODE("data") AS "data",
    "emit_info"
  FROM
    "event_nft_mint";

CREATE STREAM "event_nft_transfer" (
    "standard" STRING,
    "version" STRING,
    "event" STRING,
    "emit_info" EMIT_INFO,
    "data" ARRAY <NFT_TRANSFER>
)
WITH (
    kafka_topic = '${topic_input_prefix}.nep171.nft_transfer',
    value_format = 'json',
    partitions = ${topic_input_partitions}
);

CREATE STREAM "event_nft_transfer_flat"
  WITH (kafka_topic='${topic_input_prefix}.nep171.nft_transfer_flat', partitions=${topic_input_partitions}, value_format='json')
  AS SELECT
    EXPLODE("data") AS "data",
    "emit_info"
  FROM
    "event_nft_transfer";

-- create nfts

CREATE STREAM "nft_mint"
  WITH (kafka_topic='${topic_output_prefix}.nep171.nft_mint', partitions=${topic_input_partitions}, value_format='json')
  AS SELECT
    EXPLODE("data"->"token_ids") AS "_id",
    "data"->"owner_id" AS "owner_id",
    EXPLODE("data"->"token_ids") AS "token_id",
    "emit_info"->"contract_account_id" AS "contract_account_id"
  FROM
    "event_nft_mint_flat";

CREATE STREAM "nft_mint_partitions"
  WITH (kafka_topic='${topic_output_prefix}.nep171.nft_mint_partitions', partitions=${topic_output_partitions}, value_format='json')
  AS SELECT
    "_id",
    "owner_id",
    "token_id",
    "contract_account_id"
  FROM
    "nft_mint"
  PARTITION BY "contract_account_id";

CREATE STREAM "nft_mint_partitions_extra" ("_id" STRING, "owner_id" STRING, "token_id" STRING, "metadata" TOKEN_METADATA, "metadata_extra" MAP<STRING,STRING>, "contract_account_id" STRING KEY)
  WITH (kafka_topic='${topic_output_prefix}.nep171.nft_mint_extra', partitions=${topic_output_partitions}, value_format='json');

CREATE STREAM "nft_transfer"
  WITH (kafka_topic='${topic_output_prefix}.nep171.nft_transfer', partitions=${topic_input_partitions}, value_format='json')
  AS SELECT
    EXPLODE("data"->"token_ids") AS "_id",
    "data"->"new_owner_id" AS "owner_id",
    EXPLODE("data"->"token_ids") AS "token_id",
    "emit_info"->"contract_account_id" AS "contract_account_id"
  FROM
    "event_nft_transfer_flat";

CREATE STREAM "nft_transfer_partitions"
  WITH (kafka_topic='${topic_output_prefix}.nep171.nft_transfer_partitions', partitions=${topic_output_partitions}, value_format='json')
  AS SELECT
    "_id",
    "owner_id",
    "token_id",
    "contract_account_id"
  FROM
    "nft_transfer"
  PARTITION BY "contract_account_id";

CREATE STREAM "nft_transfer_partitions_extra" ("_id" STRING, "owner_id" STRING, "token_id" STRING, "metadata" TOKEN_METADATA, "metadata_extra" MAP<STRING,STRING>, "contract_account_id" STRING KEY)
  WITH (kafka_topic='${topic_output_prefix}.nep171.nft_transfer_extra', partitions=${topic_output_partitions}, value_format='json');

CREATE STREAM "nfts" ("contract_account_id" STRING KEY, "_id" STRING, "owner_id" STRING, "token_id" STRING, "metadata" TOKEN_METADATA, "metadata_extra" MAP<STRING,STRING>)
  WITH (kafka_topic='${topic_output_prefix}.nep171.nfts', partitions=${topic_output_partitions}, value_format='avro');

INSERT INTO "nfts" SELECT * FROM "nft_mint_partitions_extra";
INSERT INTO "nfts" SELECT * FROM "nft_transfer_partitions_extra";
